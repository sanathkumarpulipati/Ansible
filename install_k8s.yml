- hosts: "masters, workers"
  remote_user: touadmin
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  vars_files:
   - vars.yml

  tasks:
    - name: Create containerd config file
      file:
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
            overlay
            br_netfilter            

    - name: modprobe
      shell: |
            sudo modprobe overlay
            sudo modprobe br_netfilter            

    - name: Set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1                
    - name: Apply new settings
      command: sudo sysctl --system

    - name: get containerd
      get_url: url=https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz dest=/tmp/

    - name: untar containerd
      unarchive:
        src: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: get containerd service
      get_url: url=https://raw.githubusercontent.com/containerd/containerd/main/containerd.service dest=/etc/systemd/system

    - name: daemon reload
      systemd:
        name: containerd
        state: restarted
        daemon_reload: true

    - name: get runc
      get_url: url=https://github.com/opencontainers/runc/releases/download/{{ runc_version }}/runc.amd64 dest=/tmp/

    - name: install runc
      shell: |
        sudo install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc        

    - name: get cni plugin
      get_url: url=https://github.com/containernetworking/plugins/releases/download/{{ cni_plugin_version }}/cni-plugins-linux-amd64-{{ cni_plugin_version }}.tgz dest=/tmp/

    - name: create cni, containerd directories
      shell: |
        sudo mkdir -p /opt/cni/bin
        sudo mkdir -p /etc/containerd        

    - name: untar cni plugin
      unarchive:
        src: /tmp/cni-plugins-linux-amd64-{{ cni_plugin_version }}.tgz
        dest: /opt/cni/bin
        remote_src: yes

    - name: configure containerd
      shell: |
        sudo containerd config default | sudo tee /etc/containerd/config.toml
        sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
        sudo systemctl restart containerd        

    - name: disable swap
      shell: |
            sudo swapoff -a
            sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab            

    - name: install and configure dependencies
      shell: |
            sudo apt-get update && sudo apt-get install -y apt-transport-https curl
            sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}//deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
            echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}//deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list            

    - name: install kubernetes
      shell: |
            sudo apt-get update
            sudo apt-get install -y kubelet kubeadm kubectl
            sudo apt-mark hold kubelet kubeadm kubectl            
